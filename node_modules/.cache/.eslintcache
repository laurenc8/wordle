[{"/Users/benkang/Documents/Projects/wordle/src/index.js":"1","/Users/benkang/Documents/Projects/wordle/src/App.js":"2","/Users/benkang/Documents/Projects/wordle/src/reportWebVitals.js":"3","/Users/benkang/Documents/Projects/wordle/src/components/GridLayout.js":"4","/Users/benkang/Documents/Projects/wordle/src/components/GridRow.js":"5"},{"size":500,"mtime":1642919233866,"results":"6","hashOfConfig":"7"},{"size":1938,"mtime":1642919504352,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1642740580281,"results":"9","hashOfConfig":"7"},{"size":373,"mtime":1642791642869,"results":"10","hashOfConfig":"7"},{"size":1878,"mtime":1642791642869,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ij0ocy",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/benkang/Documents/Projects/wordle/src/index.js",[],["24","25"],"/Users/benkang/Documents/Projects/wordle/src/App.js",["26","27"],"import './App.css';\nimport GridLayout from './components/GridLayout';\nimport { useState } from 'react';\nimport $ from 'jquery';\n\nfunction App() {\n  const [guessNum, setGuessNum] = useState(0)\n  const [resp, setResp] = useState('')\n  const [guess0, setGuess0] = useState('');\n  const [guess1, setGuess1] = useState('');\n  const [guess2, setGuess2] = useState('');\n  const [guess3, setGuess3] = useState('');\n  const [guess4, setGuess4] = useState('');\n  const [guess5, setGuess5] = useState('');\n\n  function handler({target: {value}}) {\n    console.log(guessNum)\n    if (value.length <= 6 && (value === '' || value.match(/[a-z]/i))) {\n      const func = guessNum === 0 ? setGuess0 : (guessNum === 1 ? setGuess1 : (guessNum === 2 ? setGuess2 : (guessNum === 3 ? setGuess3 : (guessNum === 4 ? setGuess4 : setGuess5))))\n      func(value.toUpperCase())\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      setGuessNum(guessNum + 1)\n      fetch('http://127.0.0.1:5000/test',\n        {\n          method: 'GET',\n          mode: 'cors'\n        }\n      )\n        .then(function (response)  {\n          return response.json();\n        })\n        .then(function (text) {\n          console.log(text.greeting)\n          setResp(text.greeting)\n        });\n    }\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Wordle\n      </header>\n      <input\n        placeholder=\"Enter guess here!\"\n        type=\"text\"\n        value={guessNum === 0 ? guess0 : (guessNum === 1 ? guess1 : (guessNum === 2 ? guess2 : (guessNum === 3 ? guess3 : (guessNum === 4 ? guess4 : guess5))))}\n        onChange={handler}\n        onKeyDown={handleKeyDown}\n      />\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', paddingTop: '20px'}}>\n        <GridLayout guesses = {[guess0, guess1, guess2, guess3, guess4, guess5]}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/benkang/Documents/Projects/wordle/src/reportWebVitals.js",[],"/Users/benkang/Documents/Projects/wordle/src/components/GridLayout.js",[],"/Users/benkang/Documents/Projects/wordle/src/components/GridRow.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":9},{"ruleId":"32","severity":1,"message":"36","line":8,"column":10,"nodeType":"34","messageId":"35","endLine":8,"endColumn":14},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]