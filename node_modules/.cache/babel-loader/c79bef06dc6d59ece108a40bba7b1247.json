{"ast":null,"code":"var _jsxFileName = \"/Users/laurenc82/Downloads/wordle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport GridLayout from './components/GridLayout';\nimport { useState } from 'react';\nimport raw from './words_all.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [guessNum, setGuessNum] = useState(0);\n  const [guess0, setGuess0] = useState('');\n  const [guess1, setGuess1] = useState('');\n  const [guess2, setGuess2] = useState('');\n  const [guess3, setGuess3] = useState('');\n  const [guess4, setGuess4] = useState('');\n  const [guess5, setGuess5] = useState('');\n\n  function handler(_ref) {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n\n    if (value.length <= 6 && /^[a-zA-Z]*$/.test(value)) {\n      const currentSetter = guessNum === 0 ? setGuess0 : guessNum === 1 ? setGuess1 : guessNum === 2 ? setGuess2 : guessNum === 3 ? setGuess3 : guessNum === 4 ? setGuess4 : setGuess5;\n      currentSetter(value.toUpperCase());\n    }\n  }\n\n  function handleKeyDown(event) {\n    const currentGuess = guessNum === 0 ? guess0 : guessNum === 1 ? guess1 : guessNum === 2 ? guess2 : guessNum === 3 ? guess3 : guessNum === 4 ? guess4 : guess5;\n\n    if (event.key === 'Enter' && currentGuess.length === 6) {\n      setGuessNum(guessNum + 1);\n    }\n  }\n\n  var words = '';\n  fetch(raw).then(r => r.text()).then(text => {\n    words = text;\n    console.log(words);\n  });\n  console.log(\"hi\", words);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        paddingTop: '10px'\n      },\n      children: \"Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter guess here!\",\n      type: \"text\",\n      value: guessNum === 0 ? guess0 : guessNum === 1 ? guess1 : guessNum === 2 ? guess2 : guessNum === 3 ? guess3 : guessNum === 4 ? guess4 : guess5,\n      onChange: handler,\n      onKeyDown: handleKeyDown,\n      style: {\n        margin: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(GridLayout, {\n        guesses: [guess0, guess1, guess2, guess3, guess4, guess5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"101G8vfItYZlOuGI+NodQ+kejcg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laurenc82/Downloads/wordle/src/App.js"],"names":["GridLayout","useState","raw","App","guessNum","setGuessNum","guess0","setGuess0","guess1","setGuess1","guess2","setGuess2","guess3","setGuess3","guess4","setGuess4","guess5","setGuess5","handler","target","value","length","test","currentSetter","toUpperCase","handleKeyDown","event","currentGuess","key","words","fetch","then","r","text","console","log","paddingTop","margin","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import './App.css';\nimport GridLayout from './components/GridLayout';\nimport { useState } from 'react';\nimport raw from './words_all.txt';\n\nfunction App() {\n  const [guessNum, setGuessNum] = useState(0)\n  const [guess0, setGuess0] = useState('');\n  const [guess1, setGuess1] = useState('');\n  const [guess2, setGuess2] = useState('');\n  const [guess3, setGuess3] = useState('');\n  const [guess4, setGuess4] = useState('');\n  const [guess5, setGuess5] = useState('');\n\n  function handler({target: {value}}) {\n    if (value.length <= 6 && (/^[a-zA-Z]*$/.test(value))) {\n      const currentSetter = guessNum === 0 ? setGuess0 : (guessNum === 1 ? setGuess1 : (guessNum === 2 ? setGuess2 : (guessNum === 3 ? setGuess3 : (guessNum === 4 ? setGuess4 : setGuess5))))\n      currentSetter(value.toUpperCase())\n    }\n  }\n\n  function handleKeyDown(event) {\n    const currentGuess = (guessNum === 0 ? guess0 : (guessNum === 1 ? guess1 : (guessNum === 2 ? guess2 : (guessNum === 3 ? guess3 : (guessNum === 4 ? guess4 : guess5)))))\n    if (event.key === 'Enter' && currentGuess.length === 6) {\n      setGuessNum(guessNum + 1)\n    }\n  }\n\n  var words = ''\n\n  fetch(raw)\n    .then(r => r.text())\n    .then(text => {\n      words = text\n      console.log(words)\n    });\n  \n  console.log(\"hi\", words)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{paddingTop: '10px'}}>\n        Wordle\n      </header>\n      <input\n        placeholder=\"Enter guess here!\"\n        type=\"text\"\n        value={guessNum === 0 ? guess0 : (guessNum === 1 ? guess1 : (guessNum === 2 ? guess2 : (guessNum === 3 ? guess3 : (guessNum === 4 ? guess4 : guess5))))}\n        onChange={handler}\n        onKeyDown={handleKeyDown}\n        style={{margin: '20px'}}\n      />\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n        <GridLayout guesses = {[guess0, guess1, guess2, guess3, guess4, guess5]}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}